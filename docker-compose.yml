services:
  postgres:
    image: postgres:15 # change postgres to version 18 alpine - besser
    container_name: swen_postgres
    hostname: postgres
    restart: always
    environment:
      POSTGRES_DB: swenprojekt
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d swenprojekt"]
      interval: 5s
      timeout: 3s
      retries: 10

  app:
    build:
      context: ./rest
      dockerfile: Dockerfile
    container_name: swen_app
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_started
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/swenprojekt
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: guest
      SPRING_RABBITMQ_PASSWORD: guest
    ports:
      - "8082:8080"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: swen_ui
    depends_on:
      - app
    ports:
      - "80:80"

  rabbitmq:
    image: rabbitmq:3-management # change to rabbitmq:4-alpine-management - ist ressourcenschoneneder
    container_name: swen_rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest

  worker:
    build:
      context: ./ocr-worker
      dockerfile: Dockerfile
    container_name: swen_worker
    depends_on:
      - rabbitmq
    environment:
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: guest
      SPRING_RABBITMQ_PASSWORD: guest

volumes:
  postgres_data:

networks:
  default:
    name: swen_net
